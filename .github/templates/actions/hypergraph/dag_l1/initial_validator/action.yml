name: DAG L1 Initial Validator
description: "Starts the DAG L1 Initial Validator node"

inputs:
  CL_PUBLIC_HTTP_PORT:
    description: "Public HTTP port for the node"
    required: true
  CL_P2P_HTTP_PORT:
    description: "P2P HTTP port for the node"
    required: true
  CL_CLI_HTTP_PORT:
    description: "CLI HTTP port for the node"
    required: true
  CL_GLOBAL_L0_PEER_HTTP_PORT:
    description: "Global L0 peer HTTP port to connect to"
    required: true

runs:
  using: "composite"
  steps:
    - name: Running DAG L1 Initial Validator
      shell: bash
      env:
        CL_KEYSTORE: token-key.p12
        CL_KEYALIAS: token-key
        CL_PASSWORD: password
        CL_PUBLIC_HTTP_PORT: ${{ inputs.CL_PUBLIC_HTTP_PORT }}
        CL_P2P_HTTP_PORT: ${{ inputs.CL_P2P_HTTP_PORT }}
        CL_CLI_HTTP_PORT: ${{ inputs.CL_CLI_HTTP_PORT }}
        CL_APP_ENV: dev
        CL_COLLATERAL: 0
        CL_L0_PEER_HTTP_HOST: 127.0.0.1
        CL_GLOBAL_L0_PEER_HTTP_PORT: ${{ inputs.CL_GLOBAL_L0_PEER_HTTP_PORT }}
      run: |
        cd ${{ github.workspace }}/.github/code/hypergraph/dag-l0/genesis-node
        GLOBAL_L0_NODE_ID=$(java -jar ${{ github.workspace }}/.github/code/shared_jars/cl-wallet.jar show-id)

        cd ${{ github.workspace }}/.github/code/hypergraph/dag-l1/initial-validator
        
        export CL_L0_PEER_ID=$GLOBAL_L0_NODE_ID
        java -jar ${{ github.workspace }}/.github/code/shared_jars/cl-keytool.jar generate

        touch dag-l1-initial-validator.log
        nohup java -Denvironment=dev -jar ${{ github.workspace }}/.github/code/hypergraph/dag-l1.jar run-initial-validator --ip 127.0.0.1 > dag-l1-initial-validator.log 2>&1 &
        sleep 5

    - name: Check if node started
      shell: bash
      env:
        CL_PUBLIC_HTTP_PORT: ${{ inputs.CL_PUBLIC_HTTP_PORT }}
      run: |
        npx tsx ${{ github.workspace }}/.github/action_scripts/check_if_node_started.ts -url=http://127.0.0.1:${CL_PUBLIC_HTTP_PORT}/node/info -cluster_name=DAG-L1-Initial-Validator