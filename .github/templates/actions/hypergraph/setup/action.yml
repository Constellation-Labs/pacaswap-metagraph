name: Hypergraph jar build
description: "Builds and caches JAR files for hypergraph components"

inputs:
  GITHUB_TOKEN:
    description: "GitHub token for authentication"
    required: true
  TESSELLATION_COMMIT_HASH:
    required: false
    description: 'Specific tessellation commit hash to use. If not provided, latest develop commit will be used'

runs:
  using: "composite"
  steps:
    - name: Get tessellation develop commit hash
      shell: bash
      id: get-commit-hash
      run: |
        if [ -n "${{ inputs.TESSELLATION_COMMIT_HASH }}" ]; then
          COMMIT_HASH="${{ inputs.TESSELLATION_COMMIT_HASH }}"
        else
          COMMIT_HASH=$(git ls-remote https://github.com/Constellation-Labs/tessellation.git develop | cut -f1)
        fi
        echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

    - name: Restore tessellation cache
      uses: actions/cache/restore@v4
      id: cache-tessellation
      with:
        path: |
          ${{ github.workspace }}/.github/code/hypergraph/dag-l0.jar
          ${{ github.workspace }}/.github/code/hypergraph/dag-l1.jar
          ${{ github.workspace }}/.github/code/shared_jars/cl-keytool.jar
          ${{ github.workspace }}/.github/code/shared_jars/cl-wallet.jar
        key: tessellation-${{ steps.get-commit-hash.outputs.commit_hash }}

    - name: Checkout Tessellation repository
      if: steps.cache-tessellation.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: Constellation-Labs/tessellation
        ref: ${{ steps.get-commit-hash.outputs.commit_hash }}
        path: tessellation-repo

    - name: Build Tessellation
      if: steps.cache-tessellation.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Create necessary directories
        mkdir -p ${{ github.workspace }}/.github/code/hypergraph
        mkdir -p ${{ github.workspace }}/.github/code/shared_jars
        
        # Build the project
        cd ${{ github.workspace }}/tessellation-repo
        sbt -Dversion.override=99.99.99 --error clean compile dagL0/assembly dagL1/assembly keytool/assembly wallet/assembly sdk/publishM2
        
        # Move the built artifacts to the expected locations
        mv modules/dag-l0/target/scala-2.13/tessellation-dag-l0-assembly-* ${{ github.workspace }}/.github/code/hypergraph/dag-l0.jar
        mv modules/dag-l1/target/scala-2.13/tessellation-dag-l1-assembly-* ${{ github.workspace }}/.github/code/hypergraph/dag-l1.jar
        
        mv modules/keytool/target/scala-2.13/tessellation-keytool-assembly-* ${{ github.workspace }}/.github/code/shared_jars/cl-keytool.jar
        mv modules/wallet/target/scala-2.13/tessellation-wallet-assembly-* ${{ github.workspace }}/.github/code/shared_jars/cl-wallet.jar
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Clean up Tessellation repository
      if: steps.cache-tessellation.outputs.cache-hit != 'true'
      shell: bash
      run: |
        rm -rf ${{ github.workspace }}/tessellation-repo

    - name: Save tessellation cache
      if: steps.cache-tessellation.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          ${{ github.workspace }}/.github/code/hypergraph/dag-l0.jar
          ${{ github.workspace }}/.github/code/hypergraph/dag-l1.jar
          ${{ github.workspace }}/.github/code/shared_jars/cl-keytool.jar
          ${{ github.workspace }}/.github/code/shared_jars/cl-wallet.jar
        key: tessellation-${{ steps.get-commit-hash.outputs.commit_hash }}

    - name: Create hypergraph directories
      shell: bash
      run: |
        cd .github
        mkdir -p code/hypergraph/dag-l0/genesis-node
        echo "empty" > code/hypergraph/dag-l0/genesis-node/placeholder.txt
        
        mkdir -p code/hypergraph/dag-l0/validator-1
        echo "empty" > code/hypergraph/dag-l0/validator-1/placeholder.txt
        
        mkdir -p code/hypergraph/dag-l0/validator-2
        echo "empty" > code/hypergraph/dag-l0/validator-2/placeholder.txt
        
        mkdir -p code/hypergraph/dag-l1/initial-validator
        echo "empty" > code/hypergraph/dag-l1/initial-validator/placeholder.txt
        
        mkdir -p code/hypergraph/dag-l1/validator-1
        echo "empty" > code/hypergraph/dag-l1/validator-1/placeholder.txt
        
        mkdir -p code/hypergraph/dag-l1/validator-2
        echo "empty" > code/hypergraph/dag-l1/validator-2/placeholder.txt
        
        mkdir -p code/shared_jars

    - name: Copy genesis to DAG L0
      shell: bash
      run: |  
        cp .github/config/genesis.csv .github/code/hypergraph/dag-l0/genesis-node

    - name: Log cache status
      shell: bash
      run: |
        echo "Cache status:"
        echo "- DAG L0, L1 and shared JARs: ${{ steps.cache-tessellation.outputs.cache-hit == 'true' && '✅ Restored' || '⚠️ Need to build' }}"